# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# If files change in the doucments directory we need to rebuild indexes.
# If files are not changed in the documents directory we can skip more changes

name: Rebuild Index files

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:

  check:
    outputs:
      status: ${{ steps.early.conclusion }}
      
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: Check documents folder for changed-files

    steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Get changed files in the documents folder
          id: changed-files-specific
          uses: tj-actions/changed-files@v35
          with:
            files: docs/documents/*  # Alternatively using: `docs/**` or `docs`
        - name: Run step if any file(s) in the docs folder change
          if: steps.changed-files-specific.outputs.any_changed == 'true'
          run: |
            echo "One or more files in the documents folder has changed."
            echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
        
  build:

    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.status == 'success'
    steps:
        - uses: actions/checkout@v3
          with:
            ref: ${{ github.head_ref }}
        - name: Set up Python 3.10
          uses: actions/setup-python@v3
          with:
            python-version: "3.10"
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install flake8 pytest mako
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Rebuild index.html files in the documents directory
          run: |
            python $GITHUB_WORKSPACE/make_index.py --path $GITHUB_WORKSPACE/docs/documents --directory documents
        - name: setup git config
          run: |
            # setup the username and email.
            git config user.name "GitHub Actions Bot"
            git config user.email "<>"
        - name: commit
          run: |
            # Stage the index files, commit and push
            git add docs/documents/*
            if git status | grep -q "Changes to be committed"
              then
                git commit --message "new documents index commit"
                echo "Pushing git commit"
                git push origin main
            else
             echo "No changes detected"
            fi
